version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: quick-flayer-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: quick_flayer_db
      POSTGRES_USER: quick_flayer_user
      POSTGRES_PASSWORD: ${DB_PASSWORD:-dev_password}
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./app/quick-flayer-api/docker/database/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - quick-flayer-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U quick_flayer_user -d quick_flayer_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # NestJS API
  api:
    build:
      context: ./
      dockerfile: docker/api/Dockerfile
      target: development
    container_name: quick-flayer-api
    restart: unless-stopped
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://quick_flayer_user:${DB_PASSWORD:-dev_password}@postgres:5432/quick_flayer_db
      API_PORT: 3001
      JWT_SECRET: ${JWT_SECRET:-dev_jwt_secret}
      CORS_ORIGIN: ${CORS_ORIGIN:-http://localhost:3000,http://localhost:19006}
    ports:
      - "${API_PORT:-3001}:3001"
    volumes:
      - ./app/quick-flayer-api:/app
      - quick-flayer-api-node-modules:/app/node_modules
    networks:
      - quick-flayer-network
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3001/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Next.js Web Application
  web:
    build:
      context: ./
      dockerfile: docker/web/Dockerfile
      target: development
    container_name: quick-flayer-web
    restart: unless-stopped
    environment:
      NODE_ENV: development
      NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL:-http://localhost:3001}
    ports:
      - "${WEB_PORT:-3000}:3000"
    volumes:
      - ./app/quick-flayer-web:/app
      # Don't mount node_modules from host, let container manage its own modules
      - quick-flayer-web-node-modules:/app/node_modules
      - /app/.next
    networks:
      - quick-flayer-network
    depends_on:
      - api

volumes:
  postgres_data:
    driver: local
  quick-flayer-web-node-modules:
    driver: local
  quick-flayer-api-node-modules:
    driver: local

networks:
  quick-flayer-network:
    driver: bridge
