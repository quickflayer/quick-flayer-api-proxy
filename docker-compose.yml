services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: quick-flayer-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: quick_flayer_db
      POSTGRES_USER: quick_flayer_user
      POSTGRES_PASSWORD: ${DB_PASSWORD:-dev_password}
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/database/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - quick-flayer-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U quick_flayer_user -d quick_flayer_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache (Optional but recommended)
  redis:
    image: redis:7-alpine
    container_name: quick-flayer-redis
    restart: unless-stopped
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    networks:
      - quick-flayer-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # NestJS API
  api:
    build:
      context: .
      dockerfile: docker/api/Dockerfile
      target: development
    container_name: quick-flayer-api
    restart: unless-stopped
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://quick_flayer_user:${DB_PASSWORD:-dev_password}@postgres:5432/quick_flayer_db
      REDIS_URL: redis://redis:6379
      API_PORT: 3001
      JWT_SECRET: ${JWT_SECRET:-dev_jwt_secret}
      CORS_ORIGIN: ${CORS_ORIGIN:-http://localhost:3000}
    ports:
      - "${API_PORT:-3001}:3001"
    volumes:
      - .:/app
      - /app/node_modules
      - /app/dist
    networks:
      - quick-flayer-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3001/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # pgAdmin (Database Management UI)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: quick-flayer-pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@quickflayer.com
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:-admin123}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - quick-flayer-network
    depends_on:
      - postgres

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  quick-flayer-network:
    driver: bridge
